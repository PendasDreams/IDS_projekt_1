DROP TABLE airplanes        CASCADE CONSTRAINTS;
DROP TABLE airlines         CASCADE CONSTRAINTS; 
DROP TABLE airports         CASCADE CONSTRAINTS;
DROP TABLE seats            CASCADE CONSTRAINTS;   
DROP TABLE seats_for_animal CASCADE CONSTRAINTS;
DROP TABLE flights          CASCADE CONSTRAINTS;
DROP TABLE customers        CASCADE CONSTRAINTS;
DROP TABLE reservations     CASCADE CONSTRAINTS;
DROP TABLE tickets          CASCADE CONSTRAINTS;

CREATE TABLE airlines (
    /* airline_id follows ICAO format */
    airline_id        VARCHAR(3) NOT NULL PRIMARY KEY CHECK (REGEXP_LIKE(airline_id, '[A-Z]{3}')),
    airline_callsign  VARCHAR(100) NOT NULL,
    residence         VARCHAR(100) NOT NULL
);

CREATE TABLE airplanes(
    /* airplane_id follows ICAO format for aircraft registration numbers(tail number) */
    airplane_id       VARCHAR(7) NOT NULL PRIMARY KEY CHECK(REGEXP_LIKE(airplane_id, '[A-Z0-9]{3,7}')),
    manufacturer      VARCHAR(100),
    model             VARCHAR(100),
    wifi_connection_b CHAR(1) DEFAULT 'N' CHECK (wifi_connection_b IN ('Y','N')),
    airline           VARCHAR(3) CHECK (REGEXP_LIKE(airline, '[A-Z]{3}')),

CONSTRAINT airplane_owner_airline_fk FOREIGN KEY (airline) REFERENCES airlines(airline_id)
);   

CREATE TABLE airports (
    /* airport_id follows IATA format */
    airport_id      VARCHAR(3) NOT NULL PRIMARY KEY CHECK (REGEXP_LIKE(airport_id, '[A-Z]{3}')),
    country         VARCHAR(50) NOT NULL
);


CREATE TABLE flights (
    flights_id        NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    departure_time    TIMESTAMP WITH TIME ZONE NOT NULL,
    arrival_time      TIMESTAMP WITH TIME ZONE NOT NULL,
    airplane          VARCHAR(7) CHECK(REGEXP_LIKE(airplane, '[A-Z0-9]{3,7}')),
    airline           VARCHAR(3) CHECK (REGEXP_LIKE(airline, '[A-Z]{3}')),
    origin            VARCHAR(3) CHECK (REGEXP_LIKE(origin, '[A-Z]{3}')),
    destination       VARCHAR(3) CHECK (REGEXP_LIKE(destination, '[A-Z]{3}')),

    CONSTRAINT flight_with_airplane_fk        FOREIGN KEY (airplane)    REFERENCES airplanes(airplane_id),
    CONSTRAINT flight_operated_by_airline_fk  FOREIGN KEY (airline)     REFERENCES airlines(airline_id),
    CONSTRAINT flight_origin_airport_fk       FOREIGN KEY (origin)      REFERENCES airports(airport_id),
    CONSTRAINT flight_destination_airport_fk  FOREIGN KEY (destination) REFERENCES airports(airport_id)

);

CREATE TABLE customers (
    customer_id      NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    first_name       VARCHAR(50) NOT NULL,
    last_name        VARCHAR(50) NOT NULL,
    email            VARCHAR(100) NOT NULL CHECK (REGEXP_LIKE(email, '[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\.[a-zA-Z]{2,}')),
    blacklist_b      CHAR(1) DEFAULT 'N' CHECK (blacklist_b IN ('Y','N'))
);

/*payment status se přidal do ERD */
CREATE TABLE reservations (
    reservation_id  NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    cost            NUMBER(10,2) NOT NULL,
    payment_status  CHAR(1) DEFAULT 'N' CHECK (payment_status IN ('Y','N')), -- true or false
    created_at      TIMESTAMP WITH TIME ZONE NOT NULL,
    owner           NUMBER,

    CONSTRAINT reservation_creator_fk FOREIGN KEY (owner) REFERENCES customers(customer_id)
);


/*cena leteny přidáno do ERD + společnost a čas oddělána z ERD */
CREATE TABLE tickets (
    ticket_id       NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    cost            NUMBER(10,2) NOT NULL,
    reservation     NUMBER NOT NULL,

    CONSTRAINT ticket_in_reservation_fk   FOREIGN KEY (reservation) REFERENCES reservations(reservation_id)
);

CREATE TABLE seats (
    seat_id     NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    class       VARCHAR2(1) NOT NULL CHECK(REGEXP_LIKE(class, '[A-Z]')),
    cost        NUMBER(10,2) NOT NULL,
    ticket      NUMBER NOT NULL,
    airline     VARCHAR(3) CHECK (REGEXP_LIKE(airline, '[A-Z]{3}')),   
    flight      NUMBER NOT NULL,
    
    /* uniqe klíč pro generalizaci */
    CONSTRAINT People_AltPK UNIQUE (seat_id, class,ticket,airline,flight),
    CONSTRAINT flight_seat_fk       FOREIGN KEY (flight)      REFERENCES flights(flights_id),
    CONSTRAINT seat_for_ticket_fk FOREIGN KEY (ticket) REFERENCES tickets(ticket_id),
    CONSTRAINT airline_seat_fk FOREIGN KEY (airline) REFERENCES airlines(airline_id)
);

CREATE TABLE seats_for_animal (
    seat_id     NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    cage_size   VARCHAR2(1) NOT NULL CHECK(cage_size IN ('S', 'M', 'L')),
    /*
        S: SMALL
        M: MEDIUM
        L: LARGE
    */
    class       VARCHAR2(1) NOT NULL CHECK(class = 'A'),
    cost        NUMBER(10,2) NOT NULL,
    ticket      NUMBER NOT NULL,
    airline     VARCHAR(3) CHECK (REGEXP_LIKE(airline, '[A-Z]{3}')),   
    flight      NUMBER NOT NULL,
    
    FOREIGN KEY (seat_id, class,ticket,airline,flight) REFERENCES seats(seat_id, class,ticket,airline,flight)
);



/*INSERTS*//*INSERTS*//*INSERTS*//*INSERTS*//*INSERTS*//*INSERTS*//*INSERTS*//*INSERTS*//*INSERTS*//*INSERTS*/
/*INSERTS*//*INSERTS*//*INSERTS*//*INSERTS*//*INSERTS*//*INSERTS*//*INSERTS*//*INSERTS*//*INSERTS*//*INSERTS*/
/*INSERTS*//*INSERTS*//*INSERTS*//*INSERTS*//*INSERTS*//*INSERTS*//*INSERTS*//*INSERTS*//*INSERTS*//*INSERTS*/


/*AIRLINES*/
INSERT INTO airlines (airline_id, airline_callsign  , residence)
VALUES ('CYP', 'CYPRUS', 'Cyprus');

INSERT INTO airlines (airline_id, airline_callsign  , residence)
VALUES ('KYV', 'AIRKIBRIS', 'Turkey');

INSERT INTO airlines (airline_id, airline_callsign  , residence)
VALUES ('CSA', 'CSA-LINES', 'Czech Republic');


/*AIRPLANES*/
INSERT INTO airplanes (airplane_id, manufacturer, model, wifi_connection_b, airline)
VALUES ('N123AB', 'Boeing', '747-400', 'Y', 'CSA');

INSERT INTO airplanes (airplane_id, manufacturer, model, wifi_connection_b, airline)
VALUES ('N345AC', 'Airbus', 'A380', 'Y', 'KYV');

INSERT INTO airplanes (airplane_id, manufacturer, model, wifi_connection_b, airline)
VALUES ('N343FE', 'Boeing', '777-300ER', 'N','CYP');

/*AIRPORTS*/
INSERT INTO airports (airport_id, country)
VALUES ('AAF', 'United States');

INSERT INTO airports (airport_id, country)
VALUES ('AAG', 'Brazil');

INSERT INTO airports (airport_id, country)
VALUES ('AAB', 'Australia');



/*FLIGHTS*/
INSERT INTO flights (departure_time, arrival_time, airplane, airline, origin, destination)
VALUES ( TIMESTAMP '2023-05-20 03:23:00.00 +01:00', TIMESTAMP '2023-05-10 03:23:00.00 +01:00', 'N123AB', 'CYP', 'AAF', 'AAB');

INSERT INTO flights (departure_time, arrival_time, airplane, airline, origin, destination)
VALUES ( TIMESTAMP '2023-05-20 03:23:00.00 +01:00', TIMESTAMP '2023-05-10 03:23:00.00 +01:00', 'N345AC', 'KYV', 'AAG', 'AAF');

INSERT INTO flights (departure_time, arrival_time, airplane, airline, origin, destination)
VALUES ( TIMESTAMP '2023-05-20 03:23:00.00 +01:00', TIMESTAMP '2023-05-10 03:23:00.00 +01:00', 'N343FE', 'CSA', 'AAB', 'AAG');



/*CUSTOMERS*/
INSERT INTO customers (first_name, last_name, email, blacklist_b)
VALUES ('Denis', 'Novosád', 'sup@seznam.cz', 'Y');

INSERT INTO customers (first_name, last_name, email, blacklist_b)
VALUES ('Roman', 'Uncle', 'sup@gmail.cz', 'Y');

INSERT INTO customers (first_name, last_name, email, blacklist_b)
VALUES ('Ondra', 'Parol', 'sup@phub.com', 'N');


/*RESERVATIONS*/
INSERT INTO reservations (cost, payment_status, created_at, owner )
VALUES (200, 'Y', TIMESTAMP '2023-05-10 01:23:00.00 +01:00', 1);

INSERT INTO reservations (cost, payment_status, created_at, owner )
VALUES (200, 'Y', TIMESTAMP '2023-05-10 01:23:00.00 +01:00', 2);

INSERT INTO reservations (cost, payment_status, created_at, owner )
VALUES (200, 'Y', TIMESTAMP '2023-05-10 01:23:00.00 +01:00', 3);


/*TICKETS*/
INSERT INTO tickets (cost, reservation)
VALUES (200,1);

INSERT INTO tickets (cost, reservation)
VALUES (200,2);

INSERT INTO tickets (cost, reservation)
VALUES (200,3);

/*SEATS*/
INSERT INTO seats (class,cost,ticket,airline,flight)
VALUES ('B',200,1,'CYP',1);

INSERT INTO seats (class,cost,ticket,airline,flight)
VALUES ('B',200,2,'KYV',2);

INSERT INTO seats (class,cost,ticket,airline,flight)
VALUES ('A',200,3,'CSA',3);

/*SEATS FOR ANIMAL*/

INSERT INTO seats_for_animal(seat_id,cage_size,class,cost,ticket,airline,flight)
VALUES (3,'L','A',200,3,'CSA',3);